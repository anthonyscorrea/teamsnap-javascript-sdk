{"version":3,"file":"lib/test/js/test.js","sources":["test/assignments.coffee","test/availabilities.coffee","test/contacts.coffee","test/events.coffee","test/init.coffee","test/locations.coffee","test/members.coffee","test/opponents.coffee","test/plans.coffee","test/preferences.coffee","test/setup.coffee","test/sports.coffee","test/teamPublicSites.coffee","test/teams.coffee","test/tracking.coffee","test/users.coffee"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,aAAT,EAAwB;SAEtB,GAAG,iDAAH,EAAsD,SAAC,IAAD;WACpD,QAAQ,CAAC,eAAT,CAAyB,IAAI,CAAC,EAA9B,EAAkC,SAAC,GAAD,EAAM,MAAN;AAChC,aAAO,GAAP,CAAW,CAAC,EAAE,CAAC,EAAE,CAAC,MAAD,CAAjB;AAAA,MACA,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,EAAjB,CAAoB,OAApB,CADA;aAEA,OAHgC;IAAA,CAAlC,EADoD;EAAA,CAAtD,EAFsB;AAAA,CAAxB;;;;ACAA,SAAS,gBAAT,EAA2B;SAEzB,GAAG,oDAAH,EAAyD,SAAC,IAAD;WACvD,QAAQ,CAAC,kBAAT,CAA4B,IAAI,CAAC,EAAjC,EAAqC,SAAC,GAAD,EAAM,MAAN;AACnC,aAAO,GAAP,CAAW,CAAC,EAAE,CAAC,EAAE,CAAC,MAAD,CAAjB;AAAA,MACA,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,EAAjB,CAAoB,OAApB,CADA;aAEA,OAHmC;IAAA,CAArC,EADuD;EAAA,CAAzD,EAFyB;AAAA,CAA3B;;;;ACAA,SAAS,UAAT,EAAqB;SAEnB,GAAG,8CAAH,EAAmD,SAAC,IAAD;WACjD,QAAQ,CAAC,YAAT,CAAsB,IAAI,CAAC,EAA3B,EAA+B,SAAC,GAAD,EAAM,MAAN;AAC7B,aAAO,GAAP,CAAW,CAAC,EAAE,CAAC,EAAE,CAAC,MAAD,CAAjB;AAAA,MACA,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,EAAjB,CAAoB,OAApB,CADA;aAEA,OAH6B;IAAA,CAA/B,EADiD;EAAA,CAAnD,EAFmB;AAAA,CAArB;;;;ACAA,SAAS,QAAT,EAAmB;SAEjB,GAAG,4CAAH,EAAiD,SAAC,IAAD;WAC/C,QAAQ,CAAC,UAAT,CAAoB,IAAI,CAAC,EAAzB,EAA6B,SAAC,GAAD,EAAM,MAAN;AAC3B,aAAO,GAAP,CAAW,CAAC,EAAE,CAAC,EAAE,CAAC,MAAD,CAAjB;AAAA,MACA,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,EAAjB,CAAoB,OAApB,CADA;aAEA,OAH2B;IAAA,CAA7B,EAD+C;EAAA,CAAjD,EAFiB;AAAA,CAAnB;;;;ACAA;;AAAA,IAAI,CAAC,MAAL;;AAAA,MACM,CAAC,MAAP,GAAgB,IAAI,CAAC,MADrB;;AAAA,WAGA,GAAc,QAAQ,CAAC,cAAT,CAAwB,MAAxB,CAHd;;AAAA,UAIA,GAAa,QAAQ,CAAC,cAAT,CAAwB,aAAxB,CAJb;;AAAA,QAKA,GAAW,QAAQ,CAAC,cAAT,CAAwB,SAAxB,CALX;;AAAA,SAMA,GAAY,QAAQ,CAAC,cAAT,CAAwB,UAAxB,CANZ;;AAAA,QAOA,GAAW,kEAPX;;AAAA,QAQA,GAAW,wBARX;;AAAA,MASA,GAAS,CACP,MADO,EAEP,gBAFO,EAGP,+BAHO,EAIP,cAJO,EAKP,iBALO,EAMP,iBANO,EAOP,oBAPO,EAQP,eARO,EASP,8BATO,EAUP,2BAVO,EAWP,aAXO,EAYP,yBAZO,EAaP,qBAbO,EAcP,qBAdO,EAeP,6BAfO,CATT;;AA2BA,IAAG,wBAAyB,WAAzB,IACC,CAAC,MAAM,YAAY,CAAC,OAAb,CAAqB,iBAArB,CAAP,CADJ;AAEE,MAAwB,GAAxB;AAAA,YAAQ,CAAC,KAAT,GAAiB,GAAjB;GAFF;CA3BA;;AA+BA,IAAG,wBAAyB,WAAzB,IACC,CAAC,MAAM,YAAY,CAAC,OAAb,CAAqB,kBAArB,CAAP,CADJ;AAEE,MAAyB,GAAzB;AAAA,aAAS,CAAC,KAAV,GAAkB,GAAlB;GAFF;CA/BA;;AAAA,QAmCQ,CAAC,MAAT,GAAkB,QAAQ,CAAC,KAnC3B;;AAAA,QAoCQ,CAAC,OAAT,GAAmB,SAAS,CAAC,KApC7B;;AAAA,QAsCQ,CAAC,gBAAT,CAA0B,QAA1B,EAAoC;AAClC,UAAQ,CAAC,MAAT,GAAkB,QAAQ,CAAC,KAA3B;AACA,MAAG,wBAAyB,WAA5B;WACE,YAAY,CAAC,OAAb,CAAqB,iBAArB,EAAwC,QAAQ,CAAC,KAAjD,EADF;GAFkC;AAAA,CAApC,CAtCA;;AAAA,SA2CS,CAAC,gBAAV,CAA2B,QAA3B,EAAqC;AACnC,UAAQ,CAAC,OAAT,GAAmB,SAAS,CAAC,KAA7B;AACA,MAAG,wBAAyB,WAA5B;WACE,YAAY,CAAC,OAAb,CAAqB,kBAArB,EAAyC,SAAS,CAAC,KAAnD,EADF;GAFmC;AAAA,CAArC,CA3CA;;AAAA,UAgDA,GAAa,SAAC,GAAD;AACX,aAAW,CAAC,UAAU,CAAC,WAAvB,CAAmC,WAAnC;AAAA,EACA,cAAc,CAAC,OAAf,CAAuB,aAAvB,EAAsC,IAAI,CAAC,SAAL,CAAe,GAAG,CAAC,WAAnB,CAAtC,CADA;AAAA,EAEA,MAAM,CAAC,QAAP,GAAkB,GAFlB;AAAA,EAGA,KAAK,CAAC,KAAN,CAAY,KAAZ,CAHA;AAAA,EAIA,MAAM,CAAC,OAAO,CAAC,IAAf,EAAqB,CAAC,MAAtB,CAA6B,SAAC,CAAD;WAAO,OAAO,CAAC,IAAR,CAAa,CAAb,EAAP;EAAA,CAA7B,CAAoD,CAAC,OAArD,CAA6D,OAA7D,CAJA;SAKA,KAAK,CAAC,GAAN,GANW;AAAA,CAhDb;;AAAA,cAuDA,GAAiB,SAAC,GAAD;SACf,WAAW,CAAC,KAAK,CAAC,OAAlB,GAA4B,GADb;AAAA,CAvDjB;;AAAA,UA0DU,CAAC,gBAAX,CAA4B,OAA5B,EAAqC;AACnC,aAAW,CAAC,KAAK,CAAC,OAAlB,GAA4B,MAA5B;SACA,QAAQ,CAAC,gBAAT,CAA0B,QAA1B,EAAoC,MAApC,CAA2C,CAAC,IAA5C,CAAiD,UAAjD,EAA6D,cAA7D,EAFmC;AAAA,CAArC,CA1DA;;AAAA,QA+DQ,CAAC,IAAT,CAAc,QAAd,CA/DA;;AAiEA,IAAG,QAAQ,CAAC,QAAT,EAAH;AACE,aAAW,CAAC,KAAK,CAAC,OAAlB,GAA4B,MAA5B;AACA;AACE,kBAAc,IAAI,CAAC,KAAL,CAAW,cAAc,CAAC,OAAf,CAAuB,aAAvB,CAAX,CAAd,CADF;GAAA,kBADA;AAAA,EAGA,QAAQ,CAAC,IAAT,CAAc,WAAd,CAA0B,CAAC,IAA3B,CAAgC,UAAhC,EAA4C,cAA5C,CAHA,CADF;CAjEA;;;;ACAA,SAAS,WAAT,EAAsB;SAEpB,GAAG,+CAAH,EAAoD,SAAC,IAAD;WAClD,QAAQ,CAAC,aAAT,CAAuB,IAAI,CAAC,EAA5B,EAAgC,SAAC,GAAD,EAAM,MAAN;AAC9B,aAAO,GAAP,CAAW,CAAC,EAAE,CAAC,EAAE,CAAC,MAAD,CAAjB;AAAA,MACA,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,EAAjB,CAAoB,OAApB,CADA;aAEA,OAH8B;IAAA,CAAhC,EADkD;EAAA,CAApD,EAFoB;AAAA,CAAtB;;;;ACAA,SAAS,SAAT,EAAoB;SAElB,GAAG,6CAAH,EAAkD,SAAC,IAAD;WAChD,QAAQ,CAAC,WAAT,CAAqB,IAAI,CAAC,EAA1B,EAA8B,SAAC,GAAD,EAAM,MAAN;AAC5B,aAAO,GAAP,CAAW,CAAC,EAAE,CAAC,EAAE,CAAC,MAAD,CAAjB;AAAA,MACA,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,EAAjB,CAAoB,OAApB,CADA;aAEA,OAH4B;IAAA,CAA9B,EADgD;EAAA,CAAlD,EAFkB;AAAA,CAApB;;;;ACAA,SAAS,WAAT,EAAsB;SAEpB,GAAG,+CAAH,EAAoD,SAAC,IAAD;WAClD,QAAQ,CAAC,aAAT,CAAuB,IAAI,CAAC,EAA5B,EAAgC,SAAC,GAAD,EAAM,MAAN;AAC9B,aAAO,GAAP,CAAW,CAAC,EAAE,CAAC,EAAE,CAAC,MAAD,CAAjB;AAAA,MACA,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,EAAjB,CAAoB,OAApB,CADA;aAEA,OAH8B;IAAA,CAAhC,EADkD;EAAA,CAApD,EAFoB;AAAA,CAAtB;;;;ACAA,SAAS,OAAT,EAAkB;AAEhB,KAAG,kCAAH,EAAuC;AACrC,WAAO,CAAC,GAAR,CAAY,QAAQ,CAAC,KAArB;AAAA,IACA,OAAO,CAAC,KAAR,CAAc,QAAQ,CAAC,KAAvB,CADA;WAEA,OAAO,QAAQ,CAAC,KAAhB,CAAsB,CAAC,EAAE,CAAC,EAAE,CAAC,EAA7B,CAAgC,OAAhC,EAHqC;EAAA,CAAvC;AAAA,EAKA,GAAG,uCAAH,EAA4C,SAAC,IAAD;WAC1C,QAAQ,CAAC,SAAT,CAAmB;AAAA,cAAQ,IAAI,CAAC,EAAb;KAAnB,EAAoC,SAAC,GAAD,EAAM,MAAN;AAClC,aAAO,GAAP,CAAW,CAAC,EAAE,CAAC,EAAE,CAAC,MAAD,CAAjB;AAAA,MACA,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,EAAjB,CAAoB,OAApB,CADA;AAAA,MAEA,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAnB,CAA4B,QAA5B,EAAsC,CAAtC,CAFA;AAAA,MAGA,MAAO,GAAE,CAAC,MAAM,CAAC,IAAI,CAAC,QAAtB,CAA+B,MAA/B,EAAuC,MAAvC,CAHA;aAIA,OALkC;IAAA,CAApC,EAD0C;EAAA,CAA5C,CALA;SAaA,GAAG,sCAAH,EAA2C,SAAC,IAAD;WACzC,QAAQ,CAAC,QAAT,CAAkB,IAAI,CAAC,EAAvB,EAA2B,SAAC,GAAD,EAAM,MAAN;AACzB,aAAO,GAAP,CAAW,CAAC,EAAE,CAAC,EAAE,CAAC,MAAD,CAAjB;AAAA,MACA,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAnB,CAA4B,MAA5B,EAAoC,MAApC,CADA;aAEA,OAHyB;IAAA,CAA3B,EADyC;EAAA,CAA3C,EAfgB;AAAA,CAAlB;;;;ACAA,SAAS,aAAT,EAAwB;AAEtB,KAAG,+CAAH,EAAoD,SAAC,IAAD;WAClD,QAAQ,CAAC,qBAAT,CAA+B,IAAI,CAAC,EAApC,EAAwC,SAAC,GAAD,EAAM,OAAN;AACtC,aAAO,GAAP,CAAW,CAAC,EAAE,CAAC,EAAE,CAAC,MAAD,CAAjB;AAAA,MACA,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,QAApB,CAA6B,MAA7B,EAAqC,mBAArC,CADA;aAEA,OAHsC;IAAA,CAAxC,EADkD;EAAA,CAApD;AAAA,EAMA,GAAG,6CAAH,EAAkD,SAAC,IAAD;WAChD,QAAQ,CAAC,mBAAT,CAA6B,IAAI,CAAC,EAAlC,EAAsC,SAAC,GAAD,EAAM,OAAN;AACpC,aAAO,GAAP,CAAW,CAAC,EAAE,CAAC,EAAE,CAAC,MAAD,CAAjB;AAAA,MACA,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,QAApB,CAA6B,MAA7B,EAAqC,iBAArC,CADA;aAEA,OAHoC;IAAA,CAAtC,EADgD;EAAA,CAAlD,CANA;SAYA,GAAG,wCAAH,EAA6C,SAAC,IAAD;WAC3C,QAAQ,CAAC,eAAT,CAAyB,IAAI,CAAC,EAA9B,EAAkC,SAAC,GAAD,EAAM,WAAN,EAAmB,SAAnB;AAChC,aAAO,GAAP,CAAW,CAAC,EAAE,CAAC,EAAE,CAAC,MAAD,CAAjB;AAAA,MACA,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,QAAxB,CAAiC,MAAjC,EAAyC,mBAAzC,CADA;AAAA,MAEA,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,QAAtB,CAA+B,MAA/B,EAAuC,iBAAvC,CAFA;aAGA,OAJgC;IAAA,CAAlC,EAD2C;EAAA,CAA7C,EAdsB;AAAA,CAAxB;;;;ACAA,OAAO,SAAC,IAAD;AACL,QAAM,CAAC,IAAP,GAAc,QAAQ,CAAC,UAAT,CACZ;AAAA,UAAM,WAAN;AAAA,IACA,SAAS,CADT;AAAA,IAEA,QAAQ,EAFR;AAAA,IAGA,iBAAiB,eAHjB;AAAA,IAIA,oBAAoB,KAJpB;AAAA,IAKA,UAAU,gBALV;GADY,CAAd;AAAA,EAOA,KAAK,CAAC,UAAN,EAPA;SAQA,QAAQ,CAAC,QAAT,CAAkB,IAAlB,EAAwB,IAAxB,EATK;AAAA,CAAP;;AAAA,KAWA,CAAM,SAAC,IAAD;SACJ,QAAQ,CAAC,UAAT,CAAoB,IAApB,EAA0B,IAA1B,EADI;AAAA,CAAN,CAXA;;;;ACAA,SAAS,QAAT,EAAmB;AAEjB,KAAG,mCAAH,EAAwC;WACtC,OAAO,QAAQ,CAAC,MAAhB,CAAuB,CAAC,EAAE,CAAC,EAAE,CAAC,EAA9B,CAAiC,OAAjC,EADsC;EAAA,CAAxC;AAAA,EAGA,GAAG,wCAAH,EAA6C,SAAC,IAAD;WAC3C,QAAQ,CAAC,UAAT,CAAoB;AAAA,cAAQ,IAAI,CAAC,EAAb;KAApB,EAAqC,SAAC,GAAD,EAAM,MAAN;AACnC,aAAO,GAAP,CAAW,CAAC,EAAE,CAAC,EAAE,CAAC,MAAD,CAAjB;AAAA,MACA,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,EAAjB,CAAoB,OAApB,CADA;AAAA,MAEA,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAnB,CAA4B,QAA5B,EAAsC,CAAtC,CAFA;AAAA,MAGA,MAAO,GAAE,CAAC,MAAM,CAAC,IAAI,CAAC,QAAtB,CAA+B,MAA/B,EAAuC,OAAvC,CAHA;aAIA,OALmC;IAAA,CAArC,EAD2C;EAAA,CAA7C,CAHA;SAWA,GAAG,yCAAH,EAA8C,SAAC,IAAD;WAC5C,QAAQ,CAAC,SAAT,CAAmB,IAAI,CAAC,EAAxB,EAA4B,SAAC,GAAD,EAAM,MAAN;AAC1B,aAAO,GAAP,CAAW,CAAC,EAAE,CAAC,EAAE,CAAC,MAAD,CAAjB;AAAA,MACA,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAnB,CAA4B,MAA5B,EAAoC,OAApC,CADA;aAEA,OAH0B;IAAA,CAA5B,EAD4C;EAAA,CAA9C,EAbiB;AAAA,CAAnB;;;;ACAA,SAAS,mBAAT,EAA8B;SAE5B,GAAG,mDAAH,EAAwD,SAAC,IAAD;WACtD,QAAQ,CAAC,kBAAT,CAA4B,IAAI,CAAC,EAAjC,EAAqC,SAAC,GAAD,EAAM,MAAN;AACnC,aAAO,GAAP,CAAW,CAAC,EAAE,CAAC,EAAE,CAAC,MAAD,CAAjB;AAAA,MACA,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAnB,CAA4B,MAA5B,EAAoC,gBAApC,CADA;aAEA,OAHmC;IAAA,CAArC,EADsD;EAAA,CAAxD,EAF4B;AAAA,CAA9B;;;;ACAA,SAAS,OAAT,EAAkB;AAChB;AAAA,YAAU,IAAV;AAAA,EAEA,GAAG,kCAAH,EAAuC,SAAC,IAAD;WACrC,QAAQ,CAAC,SAAT,CAAmB,SAAC,GAAD,EAAM,MAAN;AACjB,aAAO,GAAP,CAAW,CAAC,EAAE,CAAC,EAAE,CAAC,MAAD,CAAjB;AAAA,MACA,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,EAAjB,CAAoB,OAApB,CADA;aAEA,OAHiB;IAAA,CAAnB,EADqC;EAAA,CAAvC,CAFA;AAAA,EAQA,GAAG,6CAAH,EAAkD,SAAC,IAAD;WAChD,QAAQ,CAAC,QAAT,CAAkB,IAAI,CAAC,EAAvB,EAA2B,SAAC,GAAD,EAAM,MAAN;AACzB,aAAO,GAAP,CAAW,CAAC,EAAE,CAAC,EAAE,CAAC,MAAD,CAAjB;AAAA,MACA,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,EAAjB,CAAoB,OAApB,CADA;aAEA,OAHyB;IAAA,CAA3B,EADgD;EAAA,CAAlD,CARA;AAAA,EAcA,GAAG,qCAAH,EAA0C,SAAC,IAAD;AACxC,cAAU,QAAQ,CAAC,UAAT,CACR;AAAA,YAAM,eAAN;AAAA,MACA,SAAS,CADT;AAAA,MAEA,iBAAiB,eAFjB;AAAA,MAGA,oBAAoB,KAHpB;AAAA,MAIA,UAAU,gBAJV;KADQ,CAAV;WAOA,QAAQ,CAAC,QAAT,CAAkB,OAAlB,EAA2B,SAAC,GAAD,EAAM,MAAN;AACzB,aAAO,GAAP,CAAW,CAAC,EAAE,CAAC,EAAE,CAAC,MAAD,CAAjB;AAAA,MACA,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAnB,CAA4B,MAA5B,EAAoC,MAApC,CADA;AAAA,MAEA,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAnB,CAA4B,IAA5B,CAFA;AAAA,MAGA,MAAM,CAAC,MAAM,CAAC,KAAd,CAAoB,OAApB,CAHA;aAIA,OALyB;IAAA,CAA3B,EARwC;EAAA,CAA1C,CAdA;SA6BA,GAAG,iCAAH,EAAsC,SAAC,IAAD;WACpC,QAAQ,CAAC,UAAT,CAAoB,OAApB,EAA6B,SAAC,GAAD,EAAM,MAAN;AAC3B,aAAO,GAAP,CAAW,CAAC,EAAE,CAAC,EAAE,CAAC,MAAD,CAAjB;aACA,OAF2B;IAAA,CAA7B,EADoC;EAAA,CAAtC,EA9BgB;AAAA,CAAlB;;;;ACAA,SAAS,UAAT,EAAqB;AAEnB,KAAG,qDAAH,EAA0D,SAAC,IAAD;WACxD,QAAQ,CAAC,gBAAT,CAA0B,IAAI,CAAC,EAA/B,EAAmC,SAAC,GAAD,EAAM,MAAN;AACjC,aAAO,GAAP,CAAW,CAAC,EAAE,CAAC,EAAE,CAAC,MAAD,CAAjB;AAAA,MACA,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,EAAjB,CAAoB,OAApB,CADA;aAEA,OAHiC;IAAA,CAAnC,EADwD;EAAA,CAA1D;SAMA,GAAG,6DAAH,EAAkE,SAAC,IAAD;WAChE,QAAQ,CAAC,uBAAT,CAAiC,IAAI,CAAC,EAAtC,EAA0C,SAAC,GAAD,EAAM,MAAN;AACxC,aAAO,GAAP,CAAW,CAAC,EAAE,CAAC,EAAE,CAAC,MAAD,CAAjB;AAAA,MACA,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,EAAjB,CAAoB,OAApB,CADA;aAEA,OAHwC;IAAA,CAA1C,EADgE;EAAA,CAAlE,EARmB;AAAA,CAArB;;;;ACAA,SAAS,OAAT,EAAkB;SAEhB,GAAG,2CAAH,EAAgD,SAAC,IAAD;WAC9C,QAAQ,CAAC,SAAT,CAAmB,IAAI,CAAC,EAAxB,EAA4B,SAAC,GAAD,EAAM,MAAN;AAC1B,aAAO,GAAP,CAAW,CAAC,EAAE,CAAC,EAAE,CAAC,MAAD,CAAjB;AAAA,MACA,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,EAAjB,CAAoB,OAApB,CADA;aAEA,OAH0B;IAAA,CAA5B,EAD8C;EAAA,CAAhD,EAFgB;AAAA,CAAlB","sourcesContent":["describe 'assignments', ->\n\n  it 'should be able to load all assignments for team', (done) ->\n    teamsnap.loadAssignments team.id, (err, result) ->\n      expect(err).to.be.null\n      result.should.be.an('array')\n      done()","describe 'availabilities', ->\n\n  it 'should be able to load all availabilities for team', (done) ->\n    teamsnap.loadAvailabilities team.id, (err, result) ->\n      expect(err).to.be.null\n      result.should.be.an('array')\n      done()","describe 'contacts', ->\n\n  it 'should be able to load all contacts for team', (done) ->\n    teamsnap.loadContacts team.id, (err, result) ->\n      expect(err).to.be.null\n      result.should.be.an('array')\n      done()","describe 'events', ->\n\n  it 'should be able to load all events for team', (done) ->\n    teamsnap.loadEvents team.id, (err, result) ->\n      expect(err).to.be.null\n      result.should.be.an('array')\n      done()","chai.should()\nwindow.expect = chai.expect\n\nauthSection = document.getElementById('auth')\nauthButton = document.getElementById('auth-button')\napiInput = document.getElementById('api-url')\nauthInput = document.getElementById('auth-url')\nclientId = '1d228d706ce170d61f9368b5967bd7a1641e6ecf742434dc198047f1a36a930a'\nredirect = 'http://localhost:8000/'\nscopes = [\n  'read'\n  'write_contacts'\n  'write_contact_email_addresses'\n  'write_events'\n  'write_locations'\n  'write_opponents'\n  'write_refreshments'\n  'write_rosters'\n  'write_roster_email_addresses'\n  'write_rosters_preferences'\n  'write_teams'\n  'write_teams_preferences'\n  'write_teams_results'\n  'write_tracked_items'\n  'write_tracked_item_statuses'\n]\n\nif typeof localStorage isnt 'undefined' and\n    (url = localStorage.getItem 'teamsnap.apiUrl')\n  apiInput.value = url if url\n\nif typeof localStorage isnt 'undefined' and\n    (url = localStorage.getItem 'teamsnap.authUrl')\n  authInput.value = url if url\n\nteamsnap.apiUrl = apiInput.value\nteamsnap.authUrl = authInput.value\n\napiInput.addEventListener 'change', ->\n  teamsnap.apiUrl = apiInput.value\n  if typeof localStorage isnt 'undefined'\n    localStorage.setItem 'teamsnap.apiUrl', apiInput.value\n\nauthInput.addEventListener 'change', ->\n  teamsnap.authUrl = authInput.value\n  if typeof localStorage isnt 'undefined'\n    localStorage.setItem 'teamsnap.authUrl', authInput.value\n\nwhenAuthed = (sdk) ->\n  authSection.parentNode.removeChild authSection\n  sessionStorage.setItem 'collections', JSON.stringify(sdk.collections)\n  window.teamsnap = sdk\n  mocha.setup('bdd')\n  window.require.list().filter((_) -> /^test/.test(_)).forEach(require)\n  mocha.run()\nwhenAuthFailed = (sdk) ->\n  authSection.style.display = ''\n\nauthButton.addEventListener 'click', ->\n  authSection.style.display = 'none'\n  teamsnap.startBrowserAuth(redirect, scopes).then whenAuthed, whenAuthFailed\n\n\nteamsnap.init clientId\n\nif teamsnap.isAuthed()\n  authSection.style.display = 'none'\n  try\n    collections = JSON.parse sessionStorage.getItem 'collections'\n  teamsnap.auth(collections).then whenAuthed, whenAuthFailed\n","describe 'locations', ->\n\n  it 'should be able to load all locations for team', (done) ->\n    teamsnap.loadLocations team.id, (err, result) ->\n      expect(err).to.be.null\n      result.should.be.an('array')\n      done()","describe 'members', ->\n\n  it 'should be able to load all members for team', (done) ->\n    teamsnap.loadMembers team.id, (err, result) ->\n      expect(err).to.be.null\n      result.should.be.an('array')\n      done()","describe 'opponents', ->\n\n  it 'should be able to load all opponents for team', (done) ->\n    teamsnap.loadOpponents team.id, (err, result) ->\n      expect(err).to.be.null\n      result.should.be.an('array')\n      done()","describe 'plans', ->\n\n  it 'should be able to load all plans', ->\n    console.log(teamsnap.plans)\n    console.table(teamsnap.plans)\n    expect(teamsnap.plans).to.be.an('array')\n\n  it 'should be able to query plan for team', (done) ->\n    teamsnap.loadPlans teamId: team.id, (err, result) ->\n      expect(err).to.be.null\n      result.should.be.an('array')\n      result.should.have.property('length', 1)\n      result[0].should.have.property('type', 'plan')\n      done()\n\n  it 'should be able to load plan for team', (done) ->\n    teamsnap.loadPlan team.id, (err, result) ->\n      expect(err).to.be.null\n      result.should.have.property('type', 'plan')\n      done()","describe 'preferences', ->\n\n  it 'should be able to load preferences for member', (done) ->\n    teamsnap.loadMemberPreferences team.id, (err, results) ->\n      expect(err).to.be.null\n      results.should.have.property('type', 'memberPreferences')\n      done()\n\n  it 'should be able to load preferences for team', (done) ->\n    teamsnap.loadTeamPreferences team.id, (err, results) ->\n      expect(err).to.be.null\n      results.should.have.property('type', 'teamPreferences')\n      done()\n\n  it 'should be able to load all preferences', (done) ->\n    teamsnap.loadPreferences team.id, (err, memberPrefs, teamPrefs) ->\n      expect(err).to.be.null\n      memberPrefs.should.have.property('type', 'memberPreferences')\n      teamPrefs.should.have.property('type', 'teamPreferences')\n      done()","before (done) ->\n  window.team = teamsnap.createTeam\n    name: 'Test Team'\n    sportId: 1\n    planId: 30\n    locationCountry: 'United States'\n    locationPostalCode: 80302\n    timeZone: 'America/Denver'\n  mocha.checkLeaks()\n  teamsnap.saveTeam team, done\n\nafter (done) ->\n  teamsnap.deleteTeam team, done\n","describe 'sports', ->\n\n  it 'should be able to load all sports', ->\n    expect(teamsnap.sports).to.be.an('array')\n\n  it 'should be able to query sport for team', (done) ->\n    teamsnap.loadSports teamId: team.id, (err, result) ->\n      expect(err).to.be.null\n      result.should.be.an('array')\n      result.should.have.property('length', 1)\n      result[0].should.have.property('type', 'sport')\n      done()\n\n  it 'should be able to load sport for a team', (done) ->\n    teamsnap.loadSport team.id, (err, result) ->\n      expect(err).to.be.null\n      result.should.have.property('type', 'sport')\n      done()","describe 'team public sites', ->\n\n  it 'should be able to load a team\\'s public site info', (done) ->\n    teamsnap.loadTeamPublicSite team.id, (err, result) ->\n      expect(err).to.be.null\n      result.should.have.property('type', 'teamPublicSite')\n      done()","describe 'teams', ->\n  newTeam = null\n\n  it 'should be able to load all teams', (done) ->\n    teamsnap.loadTeams (err, result) ->\n      expect(err).to.be.null\n      result.should.be.an('array')\n      done()\n\n  it 'should be able to load a teams data in bulk', (done) ->\n    teamsnap.bulkLoad team.id, (err, result) ->\n      expect(err).to.be.null\n      result.should.be.an('array')\n      done()\n\n  it 'should be able to create a new team', (done) ->\n    newTeam = teamsnap.createTeam\n      name: 'New Test Team'\n      sportId: 1\n      locationCountry: 'United States'\n      locationPostalCode: 80302\n      timeZone: 'America/Denver'\n\n    teamsnap.saveTeam newTeam, (err, result) ->\n      expect(err).to.be.null\n      result.should.have.property('type', 'team')\n      result.should.have.property('id')\n      result.should.equal(newTeam)\n      done()\n\n  it 'should be able to delete a team', (done) ->\n    teamsnap.deleteTeam newTeam, (err, result) ->\n      expect(err).to.be.null\n      done()\n","describe 'tracking', ->\n\n  it 'should be able to load all tracked items for a team', (done) ->\n    teamsnap.loadTrackedItems team.id, (err, result) ->\n      expect(err).to.be.null\n      result.should.be.an('array')\n      done()\n\n  it 'should be able to load all tracked item statuses for a team', (done) ->\n    teamsnap.loadTrackedItemStatuses team.id, (err, result) ->\n      expect(err).to.be.null\n      result.should.be.an('array')\n      done()","describe 'users', ->\n\n  it 'should be able to load all users for team', (done) ->\n    teamsnap.loadUsers team.id, (err, result) ->\n      expect(err).to.be.null\n      result.should.be.an('array')\n      done()"]}